/*
iven an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1
 

Follow up: Could you minimize the total number of operations done?
*/



#include <stdio.h>

void moveZeroes(int* nums, int numsSize) {
    int left = 0; // Pointer to track the position of non-zero elements
    
    // Move all non-zero elements to the front
    for (int right = 0; right < numsSize; right++) {
        if (nums[right] != 0) {
            // Swap non-zero element with left pointer
            int temp = nums[left];
            nums[left] = nums[right];
            nums[right] = temp;
            left++; // Move left pointer forward
        }
    }
}
