/*
Given two integers left and right that represent the range [left, right], return the bitwise AND of all numbers in this range, inclusive.

 

Example 1:

Input: left = 5, right = 7
Output: 4
Example 2:

Input: left = 0, right = 0
Output: 0
Example 3:

Input: left = 1, right = 2147483647
Output: 0
 


*/


#include <stdio.h>

int rangeBitwiseAnd(int left, int right) {
    int shift = 0;

    // Shift both numbers until they become the same
    while (left < right) {
        left >>= 1;
        right >>= 1;
        shift++;
    }

    // Shift back to restore the common prefix
    return left << shift;
}

int main() {
    printf("%d\n", rangeBitwiseAnd(5, 7));  // Output: 4
    printf("%d\n", rangeBitwiseAnd(0, 0));  // Output: 0
    printf("%d\n", rangeBitwiseAnd(1, 2147483647));  // Output: 0
    return 0;
}
